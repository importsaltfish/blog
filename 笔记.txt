a.用到的模块：1.http   2.url可以解析req.url   3.path可以通过path.join方法连接路径  
4.fs可以通过fs.readFile方法读取文件  5.queryString可以通过queryString.parse方法将post获得的username=saltfish&password=222解析成对象形式
6.mime可以通过mime.getType(path)方法获得请求的资源的类型（即content-type)   7.bcrypt密码加密--需要python2等环境， 
8.Joi是JavaScript对象的规则描述语言和验证器，9.formidable解析表单，支持get,post和文件上传   
10.dateformate模块，需要向模板内部导入dateFormate变量（在app.js中用到）  11.mongoose-sex-page数据分页器（p259,弹幕说课件里面少了一张ppt，在3分36秒)
12.morgan（express的中间件模块之一）在开发环境中，将客户端发送到服务器端的请求信息打印到控制台中
13.config这个模块可以让我们将不同环境下的配置信息写到不同的文件中，模块内部可以自动判断当前项目所处的环境，然后根据环境读取相应的文件里面的配置信息，
它有利于我们对一个项目进行维护，当需要修改不同环境下的配置信息时，直接对相应的文件进行修改就可以了
14.body-parser：用于解析客户端请求的body中的内容,内部使用JSON编码处理,url编码处理以及对于文件的上传处理
		const bodyParser = require('body-parser');
		//对body-parser进行配置
		app.use( bodyParser.urlencoded({extended: true}) )
		//设置完毕之后，会在req对象上面新增一个req.body的一个对象

b.相应报文例子：res.writeHead(404, {'content-type': 'text/html;charset=urf8'})


c.回调地狱：一个异步请求套着一个异步请求，一个异步请求依赖于另一个的执行结果，使用回调的方式相互嵌套。这会导致代码很丑陋，不方便后期维护

d.异步函数：const fn = async () => {} 默认返回的是一个promise
异步函数在node中使用需要promisify方法, const promisify = require('util').promisify


e.涉及文件上传时，form需要有enctype属性
       默认值是application/x-www-form-urlencoded
               即类似name=zhangsan&age=20这样的
       需要将表单数据编码成二进制类型,即multipart/form-data

f.在使用mongoose时遇到了populat（）方法查询到的数据传输到渲染模板时报错，解决方法：加上.lean() , (在artivles.js遇到)
g.在js文件中获取环境变量: process.env
h.用到删除html标签的方法：.replace(/<[^>]+>/g, '')




。。。。
